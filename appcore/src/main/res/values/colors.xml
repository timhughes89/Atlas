<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Planet Colors -->
    <color name="colorSun">#FFF6D5</color>
    <color name="colorPlanetMercury">#A9A698</color>
    <color name="colorPlanetVenus">#737782</color>
    <color name="colorPlanetEarth">#6E75A0</color>
    <color name="colorPlanetMars">#D36540</color>
    <color name="colorPlanetJupiter">#E8B28E</color>
    <color name="colorPlanetSaturn">#D0A673</color>
    <color name="colorPlanetUranus">#D1E7E9</color>
    <color name="colorPlanetNeptune">#6491DA</color>

    <!--Color-->
    ​
    <!--Material uses an organized approach to applying color by providing a set of attributes -->
    <!--which define the color of generalized UI elements such as backgrounds, surfaces, type -->
    <!--and icons. Using these attributes throughout your app makes it easy to change a single -->
    <!--color, or the entire theme, and have those changes cascade through the interface.-->
    ​
    <!--Color is customized by overriding Material Components color attributes with custom -->
    <!--color values. In this project, your theme’s color attributes are already overridden -->
    <!--with default values defined in this file, color.xml.  Change any of the values in -->
    <!--this file to see changes applied across all elements of your app.-->
    ​
    <!--LIGHT COLOR THEME-->
    ​
    <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
    <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
    <!--selection controls.-->
    <color name="color_primary">#2158FF</color>
    <color name="color_primary_variant">#2158FF</color>
    <color name="color_secondary">#E43F6A</color>
    <color name="color_secondary_variant">#E43F6A</color>
<!--    <color name="color_tertiary">#BC4080</color>-->
<!--    <color name="color_tertiary_variant">#BC4080</color>-->
    ​
    <!--colorBackground appears behind scrollable content and is used for the default window-->
    <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
    <!--and menus. colorError is used to indicate an error state for components such as-->
    <!--text fields.-->
    <color name="color_background">#2A2A2A</color>
    <color name="color_surface">#383838</color>
    <color name="color_error">#b00020</color>
    ​
    <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
    <!--on which they appear.-->
    <color name="color_on_primary">#ffffff</color>
    <color name="color_on_secondary">#000000</color>
    <color name="color_on_background">#ffffff</color>
    <color name="color_on_surface">#ffffff</color>
    <color name="color_on_error">#ffffff</color>

    <!-- Color tints  -->
    <color name="color_black_10">#10000000</color>
    <color name="color_black_50">#50000000</color>

    <color name="color_dark_grey">#555555</color>

    <color name="color_white_10">#10FFFFFF</color>
    <color name="color_white_60">#60ffffff</color>

    <!-- Needed to override outlined box stroke color textInputLayout -->
    <color name="mtrl_textinput_default_box_stroke_color" tools:override="true">@color/color_white_60</color>

</resources>
